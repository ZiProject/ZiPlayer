// Auto-generated API content
// Do not edit this file manually - it will be overwritten

export const generatedApiContent = {
  "playermanager": {
    "title": "PlayerManager",
    "description": "The PlayerManager class",
    "badges": [
      "class",
      "core",
      "playermanager"
    ],
    "code": "// PlayerManager usage example",
    "methods": [],
    "events": []
  },
  "player": {
    "title": "Player",
    "description": "The Player class",
    "badges": [
      "class",
      "core",
      "player"
    ],
    "code": "// Player usage example",
    "methods": [],
    "events": []
  },
  "queue": {
    "title": "Queue",
    "description": "The Queue class",
    "badges": [
      "class",
      "core",
      "queue"
    ],
    "code": "// Queue usage example",
    "methods": [],
    "events": []
  },
  "track": {
    "title": "Track",
    "description": "The Track interface",
    "badges": [
      "interface",
      "core",
      "track"
    ],
    "code": "// Track usage example",
    "methods": [],
    "events": []
  },
  "searchresult": {
    "title": "SearchResult",
    "description": "The SearchResult interface",
    "badges": [
      "interface",
      "core",
      "searchresult"
    ],
    "code": "// SearchResult usage example",
    "methods": [],
    "events": []
  },
  "streaminfo": {
    "title": "StreamInfo",
    "description": "The StreamInfo interface",
    "badges": [
      "interface",
      "core",
      "streaminfo"
    ],
    "code": "// StreamInfo usage example",
    "methods": [],
    "events": []
  },
  "playeroptions": {
    "title": "PlayerOptions",
    "description": "The PlayerOptions interface",
    "badges": [
      "interface",
      "core",
      "playeroptions"
    ],
    "code": "// PlayerOptions usage example",
    "methods": [],
    "events": []
  },
  "playermanageroptions": {
    "title": "PlayerManagerOptions",
    "description": "The PlayerManagerOptions interface",
    "badges": [
      "interface",
      "core",
      "playermanageroptions"
    ],
    "code": "// PlayerManagerOptions usage example",
    "methods": [],
    "events": []
  },
  "progressbaroptions": {
    "title": "ProgressBarOptions",
    "description": "Options for the progress bar",
    "badges": [
      "interface",
      "core",
      "progressbaroptions"
    ],
    "code": "const options: ProgressBarOptions = {\n  size: 10,\n  barChar: \"=\",\n  progressChar: \">\"\n};\n/",
    "methods": [],
    "events": []
  },
  "extensioncontext": {
    "title": "ExtensionContext",
    "description": "Context for the extension",
    "badges": [
      "interface",
      "core",
      "extensioncontext"
    ],
    "code": "const context: ExtensionContext = {\n  player: player,\n  manager: manager\n};\n/",
    "methods": [],
    "events": []
  },
  "extensionplayrequest": {
    "title": "ExtensionPlayRequest",
    "description": "Request for the extension to play a track",
    "badges": [
      "interface",
      "core",
      "extensionplayrequest"
    ],
    "code": "const request: ExtensionPlayRequest = {\n  query: \"Song Name\",\n  requestedBy: \"user123\"\n};\n/",
    "methods": [],
    "events": []
  },
  "extensionplayresponse": {
    "title": "ExtensionPlayResponse",
    "description": "Response for the extension to play a track",
    "badges": [
      "interface",
      "core",
      "extensionplayresponse"
    ],
    "code": "const response: ExtensionPlayResponse = {\n  handled: true,\n  query: \"Song Name\",\n  requestedBy: \"user123\"\n};\n/",
    "methods": [],
    "events": []
  },
  "extensionafterplaypayload": {
    "title": "ExtensionAfterPlayPayload",
    "description": "Payload for the extension to play a track",
    "badges": [
      "interface",
      "core",
      "extensionafterplaypayload"
    ],
    "code": "const payload: ExtensionAfterPlayPayload = {\n  success: true,\n  query: \"Song Name\",\n  requestedBy: \"user123\"\n};\n/",
    "methods": [],
    "events": []
  },
  "extensionstreamrequest": {
    "title": "ExtensionStreamRequest",
    "description": "Request for the extension to stream a track",
    "badges": [
      "interface",
      "core",
      "extensionstreamrequest"
    ],
    "code": "const request: ExtensionStreamRequest = {\n  track: track\n};\n/",
    "methods": [],
    "events": []
  },
  "extensionsearchrequest": {
    "title": "ExtensionSearchRequest",
    "description": "Request for the extension to search for a track",
    "badges": [
      "interface",
      "core",
      "extensionsearchrequest"
    ],
    "code": "const request: ExtensionSearchRequest = {\n  query: \"Song Name\",\n  requestedBy: \"user123\"\n};\n/",
    "methods": [],
    "events": []
  },
  "playerevents": {
    "title": "PlayerEvents",
    "description": "The PlayerEvents interface",
    "badges": [
      "interface",
      "core",
      "playerevents"
    ],
    "code": "// PlayerEvents usage example",
    "methods": [],
    "events": []
  },
  "sourceplugin": {
    "title": "SourcePlugin",
    "description": "Plugin interface",
    "badges": [
      "interface",
      "core",
      "sourceplugin"
    ],
    "code": "const plugin: SourcePlugin = {\n  name: \"YouTube\",\n  version: \"1.0.0\"\n};\n/",
    "methods": [],
    "events": []
  },
  "sourceextension": {
    "title": "SourceExtension",
    "description": "Extension interface",
    "badges": [
      "interface",
      "core",
      "sourceextension"
    ],
    "code": "const extension: SourceExtension = {\n  name: \"YouTube\",\n  version: \"1.0.0\"\n};\n/",
    "methods": [],
    "events": []
  },
  "lavalinkext": {
    "title": "lavalinkExt",
    "description": "The lavalinkExt class",
    "badges": [
      "class",
      "core",
      "lavalinkext"
    ],
    "code": "// lavalinkExt usage example",
    "methods": [],
    "events": []
  },
  "speechoptions": {
    "title": "SpeechOptions",
    "description": "The SpeechOptions interface",
    "badges": [
      "interface",
      "core",
      "speechoptions"
    ],
    "code": "// SpeechOptions usage example",
    "methods": [],
    "events": []
  },
  "pcmstream": {
    "title": "PcmStream",
    "description": "The PcmStream class",
    "badges": [
      "class",
      "core",
      "pcmstream"
    ],
    "code": "// PcmStream usage example",
    "methods": [],
    "events": []
  },
  "voiceext": {
    "title": "voiceExt",
    "description": "The voiceExt class",
    "badges": [
      "class",
      "core",
      "voiceext"
    ],
    "code": "// voiceExt usage example",
    "methods": [],
    "events": []
  },
  "lyricsoptions": {
    "title": "LyricsOptions",
    "description": "The LyricsOptions interface",
    "badges": [
      "interface",
      "core",
      "lyricsoptions"
    ],
    "code": "// LyricsOptions usage example",
    "methods": [],
    "events": []
  },
  "lyricsresult": {
    "title": "LyricsResult",
    "description": "The LyricsResult interface",
    "badges": [
      "interface",
      "core",
      "lyricsresult"
    ],
    "code": "// LyricsResult usage example",
    "methods": [],
    "events": []
  },
  "lyricsext": {
    "title": "lyricsExt",
    "description": "The lyricsExt class",
    "badges": [
      "class",
      "core",
      "lyricsext"
    ],
    "code": "// lyricsExt usage example",
    "methods": [],
    "events": []
  },
  "youtubeplugin": {
    "title": "YouTubePlugin",
    "description": "The YouTubePlugin class",
    "badges": [
      "class",
      "core",
      "youtubeplugin"
    ],
    "code": "// YouTubePlugin usage example",
    "methods": [],
    "events": []
  },
  "soundcloudplugin": {
    "title": "SoundCloudPlugin",
    "description": "The SoundCloudPlugin class",
    "badges": [
      "class",
      "core",
      "soundcloudplugin"
    ],
    "code": "// SoundCloudPlugin usage example",
    "methods": [],
    "events": []
  },
  "spotifyplugin": {
    "title": "SpotifyPlugin",
    "description": "The SpotifyPlugin class",
    "badges": [
      "class",
      "core",
      "spotifyplugin"
    ],
    "code": "// SpotifyPlugin usage example",
    "methods": [],
    "events": []
  },
  "ttspluginoptions": {
    "title": "TTSPluginOptions",
    "description": "Configuration options for the TTSPlugin. /",
    "badges": [
      "interface",
      "core",
      "ttspluginoptions"
    ],
    "code": "// TTSPluginOptions usage example",
    "methods": [],
    "events": []
  },
  "ttsconfig": {
    "title": "TTSConfig",
    "description": "Internal configuration for TTS processing. /",
    "badges": [
      "interface",
      "core",
      "ttsconfig"
    ],
    "code": "// TTSConfig usage example",
    "methods": [],
    "events": []
  },
  "ttsplugin": {
    "title": "TTSPlugin",
    "description": "The TTSPlugin class",
    "badges": [
      "class",
      "core",
      "ttsplugin"
    ],
    "code": "// TTSPlugin usage example",
    "methods": [],
    "events": []
  }
};